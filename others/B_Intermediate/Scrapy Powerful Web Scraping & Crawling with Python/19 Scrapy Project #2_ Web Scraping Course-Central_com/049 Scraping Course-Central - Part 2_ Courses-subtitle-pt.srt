1
00:00:00,552 --> 00:00:01,385
Olá!

2
00:00:01,385 --> 00:00:02,984
Então esta é a segunda parte do

3
00:00:02,984 --> 00:00:05,094
spider Class Central.

4
00:00:05,094 --> 00:00:07,516
E então, vamos em frente,

5
00:00:07,516 --> 00:00:10,221
e vamos direto para algum assunto,

6
00:00:10,221 --> 00:00:13,439
como, por exemplo, Computer Science.

7
00:00:13,439 --> 00:00:17,584
Então aqui, vamos imprimir ou copiar e colar isto

8
00:00:17,584 --> 00:00:19,632
no nosso Scrapy Shell.

9
00:00:19,632 --> 00:00:22,173
Então digitamos "scrapy shell" e então,

10
00:00:22,173 --> 00:00:24,840
em aspas simples ou duplas, a URL.

11
00:00:26,584 --> 00:00:29,912
O primeiro ponto de dados que vamos coletar,

12
00:00:29,912 --> 00:00:31,844
similar a esta página, vai ser o

13
00:00:31,844 --> 00:00:35,347
Computer Science ou, na verdade, o nome do assunto.

14
00:00:35,347 --> 00:00:38,595
Então podemos tanto extrair isso daqui

15
00:00:38,595 --> 00:00:40,997
pegando esta string, ou podemos pegá-lo

16
00:00:40,997 --> 00:00:41,830
do title.

17
00:00:41,830 --> 00:00:43,722
O title está localizado aqui,

18
00:00:43,722 --> 00:00:45,178
como você verá em um momento.

19
00:00:45,178 --> 00:00:47,463
Então você pode ver que Computer Science

20
00:00:47,463 --> 00:00:49,926
vai estar localizado aqui.

21
00:00:49,926 --> 00:00:52,468
Para fazer isso, ou para selecionar todo title,

22
00:00:52,468 --> 00:00:55,051
podemos digitar "response.xpath"

23
00:00:56,039 --> 00:01:00,206
"//title".

24
00:01:00,259 --> 00:01:03,198
Aqui, podemos ver que há dois titles.

25
00:01:03,198 --> 00:01:05,102
Vamos selecionar o primeiro,

26
00:01:05,102 --> 00:01:07,224
então "extract_first()".

27
00:01:07,224 --> 00:01:11,200
Como você pode ver, ele contém nossos dado e

28
00:01:11,200 --> 00:01:15,367
não precisamos do nó &lt;title&gt;.

29
00:01:15,391 --> 00:01:17,767
Então vamos digitar

30
00:01:17,767 --> 00:01:19,593
"text()""

31
00:01:19,593 --> 00:01:22,476
E aqui, temos a string Unicode,

32
00:01:22,476 --> 00:01:25,630
que contém o ponto de dado que queremos.

33
00:01:25,630 --> 00:01:29,105
Então, como este espaço e este caractere

34
00:01:29,105 --> 00:01:32,457
e também este espaço está contido em mais dois lugares,

35
00:01:32,457 --> 00:01:34,225
nós podemos dividir ele

36
00:01:34,225 --> 00:01:36,663
por estes três caractere e selecionar

37
00:01:36,663 --> 00:01:39,510
a primeira instância da lista

38
00:01:39,510 --> 00:01:41,070
que vamos conseguir.

39
00:01:41,070 --> 00:01:42,688
Então para fazer isso, a primeira coisa

40
00:01:42,688 --> 00:01:45,271
é chamar a função split.

41
00:01:46,309 --> 00:01:48,307
Então "split()""

42
00:01:48,307 --> 00:01:50,557
e vamos dividir ele pelos

43
00:01:51,595 --> 00:01:54,120
três caracteres já mencionados,

44
00:01:54,120 --> 00:01:56,717
e aqui você verá que vamos ter

45
00:01:56,717 --> 00:01:57,769
três itens diferentes.

46
00:01:57,769 --> 00:01:59,783
Então o primeiro deles é o que precisamos,

47
00:01:59,783 --> 00:02:01,605
e estes outros dois, basicamente,

48
00:02:01,605 --> 00:02:03,404
nós não ligamos.

49
00:02:03,404 --> 00:02:07,038
Então vamos apenas selecionar a primeira instância.

50
00:02:07,038 --> 00:02:10,575
Ok, então, como já fizemos isso corretamente,

51
00:02:10,575 --> 00:02:13,395
vamos copiar e colar isso para nosso código,

52
00:02:13,395 --> 00:02:17,070
e vamos definir o subject_name

53
00:02:17,167 --> 00:02:19,964
como o nome da nossa variável.

54
00:02:19,964 --> 00:02:23,343
Vamos primeiro usar o extract_first().

55
00:02:23,343 --> 00:02:27,298
E então chamar o subject_name para ser

56
00:02:27,298 --> 00:02:29,965
o subject_name, e então dividi-lo

57
00:02:31,681 --> 00:02:33,514
em...

58
00:02:34,140 --> 00:02:35,384
nestes três caracteres,

59
00:02:35,384 --> 00:02:37,608
e então vamos, novamente, chamar subject_name

60
00:02:37,608 --> 00:02:39,642
só pra deixá-lo mais bonito.

61
00:02:39,642 --> 00:02:43,809
E vamos usar a primeira instância da nossa lista.

62
00:02:44,350 --> 00:02:45,433
O segundo ponto de dado

63
00:02:45,433 --> 00:02:47,600
que vamos coletar

64
00:02:47,600 --> 00:02:49,301
é na verdade um seletor.

65
00:02:49,301 --> 00:02:53,204
Esse seletor vai basicamente ser

66
00:02:53,204 --> 00:02:56,871
o container do subject.

67
00:02:58,156 --> 00:03:01,226
Então, me dê um momento, então eu posso localizar um

68
00:03:01,226 --> 00:03:02,976
que vai ser...

69
00:03:05,562 --> 00:03:08,939
Por exemplo, este vai ser um container

70
00:03:08,939 --> 00:03:12,912
que vai ser chamado courses, ou qualquer coisa.

71
00:03:12,912 --> 00:03:15,251
Então se formos para o Inspect,

72
00:03:15,251 --> 00:03:18,090
você verá que, como estou destacando neste momento,

73
00:03:18,090 --> 00:03:21,090
isso é basicamente a linha da tabela.

74
00:03:22,416 --> 00:03:26,254
O jeito que vamos conseguir isto,

75
00:03:26,254 --> 00:03:30,296
Nós não vamos pegar os dados da tabela, ou a linha.

76
00:03:30,296 --> 00:03:32,585
Nós podemos pegar ele, ou pontos e dados que

77
00:03:32,585 --> 00:03:35,626
gostaríamos da tabela de dados,

78
00:03:35,626 --> 00:03:37,939
e especificamente, a classe chamada

79
00:03:37,939 --> 00:03:41,856
course-name, ou o course-name-column na verdade.

80
00:03:42,733 --> 00:03:44,614
E então da tabela de dados,

81
00:03:44,614 --> 00:03:47,102
o que vamos pegar é o

82
00:03:47,102 --> 00:03:48,711
próprio nome do curso, que vai ser,

83
00:03:48,711 --> 00:03:51,442
neste caso, o System Validation

84
00:03:51,442 --> 00:03:55,230
e esta substring.

85
00:03:55,230 --> 00:03:57,286
E também a URL vai ser

86
00:03:57,286 --> 00:03:58,946
basicamente este href.

87
00:03:58,946 --> 00:04:02,180
Então para fazer isso, podemos voltar para nosso Shell,

88
00:04:02,180 --> 00:04:05,584
e então digitar "response.xpath",

89
00:04:05,584 --> 00:04:07,704
e então select--

90
00:04:07,704 --> 00:04:10,707
Vamos definir courses agora,

91
00:04:10,707 --> 00:04:13,263
então podemos copiar e colar isso mais tarde.

92
00:04:13,263 --> 00:04:15,929
Então courses vai ser igual

93
00:04:15,929 --> 00:04:18,022
ao response.xpath.

94
00:04:18,022 --> 00:04:22,189
Então vamos selecionar todas as instâncias da classe,

95
00:04:22,203 --> 00:04:24,767
e essa classe vai ter o valor...

96
00:04:24,767 --> 00:04:26,152
Vamos ver, novamente.

97
00:04:26,152 --> 00:04:28,022
Então podemos, é,

98
00:04:28,022 --> 00:04:30,475
podemos usar o próprio nome do curso,

99
00:04:30,475 --> 00:04:31,946
então não precisamos ir

100
00:04:31,946 --> 00:04:33,886
e buscar a coluna course-name.

101
00:04:33,886 --> 00:04:36,714
Podemos apenas ir em frente e usar o próprio nome do curso.

102
00:04:36,714 --> 00:04:40,881
O motivo é porque vamos pegar o próprio href

103
00:04:41,027 --> 00:04:44,868
e o texto também pode ser

104
00:04:44,868 --> 00:04:48,163
encontrado no próprio título, como você pode ver.

105
00:04:48,163 --> 00:04:50,496
Então vamos usar isso.

106
00:04:51,574 --> 00:04:52,407
Então...

107
00:04:53,672 --> 00:04:57,278
courses vai ser, vamos ver.

108
00:04:57,278 --> 00:04:58,827
Vamos voltar para nosso terminal.

109
00:04:58,827 --> 00:05:01,764
Então class vai ser, uhm, copie e cole isso

110
00:05:01,764 --> 00:05:03,356
do course-name.

111
00:05:03,356 --> 00:05:05,285
Então copie, cole isso,

112
00:05:05,285 --> 00:05:09,225
e vamos ver quantos cursos são encontrados.

113
00:05:09,225 --> 00:05:12,597
Então parece que todos eles foram encontrados,

114
00:05:12,597 --> 00:05:13,847
então vamos ver...

115
00:05:18,051 --> 00:05:21,968
courses, e então extract() apenas para verificar que

116
00:05:24,525 --> 00:05:27,010
todos eles vão ser buscados para fazer isso,

117
00:05:27,010 --> 00:05:28,590
então chamamos o extract(),

118
00:05:28,590 --> 00:05:30,746
e então vamos selecionar o primeiro deles,

119
00:05:30,746 --> 00:05:32,357
que vai ser o Coursera

120
00:05:32,357 --> 00:05:34,154
Bitcoin and Cryptocurrency.

121
00:05:34,154 --> 00:05:36,912
Então vamos ver qual vai corresponder

122
00:05:36,912 --> 00:05:38,162
ao último deles,

123
00:05:38,162 --> 00:05:40,118
ou ao primeiro, desculpe,

124
00:05:40,118 --> 00:05:42,272
e então o último deles vai ser

125
00:05:42,272 --> 00:05:45,180
Data Processing Using Python, courses

126
00:05:45,180 --> 00:05:49,347
Então [-1] vai ser o último deles, vamos ver,

127
00:05:50,172 --> 00:05:52,293
o nó HTML está correspondendo...

128
00:05:52,293 --> 00:05:55,237
ou o título é Data Processing Using Python,

129
00:05:55,237 --> 00:05:56,188
o que é perfeito,

130
00:05:56,188 --> 00:05:59,270
Então todo curso vai ser buscado.

131
00:05:59,270 --> 00:06:00,770
Então copie e cole

132
00:06:02,109 --> 00:06:04,859
isto para o código que já temos.

133
00:06:05,898 --> 00:06:09,461
Já que vamos buscar a própria URL,

134
00:06:09,461 --> 00:06:11,705
ou o próprio href,

135
00:06:11,705 --> 00:06:13,390
que vai ser este ponto de dado,

136
00:06:13,390 --> 00:06:15,887
e também o título, que vai ser

137
00:06:15,887 --> 00:06:17,332
este ponto de dado.

138
00:06:17,332 --> 00:06:18,437
Vamos usar seletores,

139
00:06:18,437 --> 00:06:20,754
e não vamos usar o extract().

140
00:06:20,754 --> 00:06:24,921
Então, courses vão ser definidos como isto,

141
00:06:25,175 --> 00:06:28,936
e também vamos definir primeiro o course para

142
00:06:28,936 --> 00:06:32,776
herdar do primeiro de courses.

143
00:06:32,776 --> 00:06:36,943
E então podemos, basicamente, usar o course.xpath

144
00:06:38,164 --> 00:06:41,034
para navegar para o href,

145
00:06:41,034 --> 00:06:44,554
que pode ser encontrado assim, como você pode ver.

146
00:06:44,554 --> 00:06:47,554
Então esta é a URL que corresponde

147
00:06:50,547 --> 00:06:52,047
a, basicamente,

148
00:06:55,413 --> 00:06:56,697
esta URL.

149
00:06:56,697 --> 00:06:57,530
Inspect.

150
00:06:57,530 --> 00:07:00,808
E esta é a URL que estou destacando neste momento.

151
00:07:00,808 --> 00:07:04,531
Então este vai ser o que está correspondendo.

152
00:07:04,531 --> 00:07:07,777
Então para elaborar um pouco mais esta

153
00:07:07,777 --> 00:07:10,020
declaração XPath.

154
00:07:10,020 --> 00:07:13,099
Então nós vamos para course,

155
00:07:13,099 --> 00:07:17,016
que vai ser basicamente este seletor.

156
00:07:17,966 --> 00:07:20,175
Então, tudo isso.

157
00:07:20,175 --> 00:07:23,094
E vamos e digitar primeiro ".".

158
00:07:23,094 --> 00:07:25,144
A razão é porque nós não estamos usando

159
00:07:25,144 --> 00:07:26,584
response.xpath.

160
00:07:26,584 --> 00:07:29,062
Estamos usando course.xpath.

161
00:07:29,062 --> 00:07:30,622
Então essa é uma coisa para notar,

162
00:07:30,622 --> 00:07:32,895
e vamos selecionar toda tag href,

163
00:07:32,895 --> 00:07:35,250
já que só há apenas uma tag href.

164
00:07:35,250 --> 00:07:37,698
Nós então estamos indo

165
00:07:37,698 --> 00:07:41,540
e pegando apenas este valor.

166
00:07:41,540 --> 00:07:43,266
Então isso vai usar também

167
00:07:43,499 --> 00:07:47,014
extract_first(),

168
00:07:47,014 --> 00:07:50,166
e esta é a URL que está correspondendo

169
00:07:50,166 --> 00:07:53,019
à URL do curso.

170
00:07:53,019 --> 00:07:55,554
Então vamos escrever

171
00:07:55,554 --> 00:07:57,344
apenas um laço normal,

172
00:07:57,344 --> 00:08:00,761
então "for course in courses".

173
00:08:01,852 --> 00:08:04,102
Então isso vai ser, vamos ver,

174
00:08:05,014 --> 00:08:07,706
course_url, por exemplo.

175
00:08:07,706 --> 00:08:11,670
E o course_name vai ser, por exemplo,

176
00:08:11,670 --> 00:08:14,285
o nome para, claro, nome do curso.

177
00:08:14,285 --> 00:08:16,749
E a forma que nós extraimos

178
00:08:16,749 --> 00:08:19,192
o nome do curso vai ser contido

179
00:08:19,192 --> 00:08:20,025
no title.

180
00:08:20,025 --> 00:08:22,003
Então já que só há um title,

181
00:08:22,003 --> 00:08:25,670
podemos ir em frente e reutilizar, basicamente,

182
00:08:26,815 --> 00:08:30,658
a maioria da nossa declaração para a URL

183
00:08:30,658 --> 00:08:33,637
e digitamos, em ver de href, title.

184
00:08:33,637 --> 00:08:37,292
E você verá que o title que corresponde

185
00:08:37,292 --> 00:08:39,401
a, basicamente,

186
00:08:39,401 --> 00:08:40,484
este aqui, ou,

187
00:08:41,500 --> 00:08:42,579
no website,

188
00:08:42,579 --> 00:08:44,474
você verá que este é

189
00:08:44,474 --> 00:08:45,587
o ponto de dado

190
00:08:45,587 --> 00:08:47,387
que estou destacando neste momento.

191
00:08:47,387 --> 00:08:51,342
Então apenas copie e cole esta declaração,

192
00:08:51,342 --> 00:08:55,289
para nosso código e

193
00:08:55,289 --> 00:08:56,581
vamos também,

194
00:08:56,581 --> 00:09:00,441
já que o course_url não vai ser

195
00:09:00,441 --> 00:09:04,349
o absoluto, vamos apenas contruir o

196
00:09:04,349 --> 00:09:05,908
absoluto digitando

197
00:09:06,166 --> 00:09:10,333
"absolute_course_url".

198
00:09:11,522 --> 00:09:13,903
Isso, claro, vai ter que usar

199
00:09:13,903 --> 00:09:16,534
o response ou, desculpe,

200
00:09:16,534 --> 00:09:20,307
o response.urljoin.

201
00:09:20,307 --> 00:09:24,474
E nos parênteses, vamos usar o course_url.

202
00:09:25,111 --> 00:09:27,248
E finalmente usar o yield.

203
00:09:27,248 --> 00:09:29,254
Para fazer isso, claro,

204
00:09:29,254 --> 00:09:30,754
yield, e então,

205
00:09:31,736 --> 00:09:34,069
vamos ver, então course_name.

206
00:09:36,982 --> 00:09:37,815
E também

207
00:09:40,314 --> 00:09:42,859
o ponto de dado vai ser

208
00:09:42,859 --> 00:09:44,692
absolute_course_url

209
00:09:46,452 --> 00:09:48,555
E também, nos esquecemos do subject_name,

210
00:09:48,555 --> 00:09:52,460
então vamos usá-lo, subject_name.

211
00:09:52,460 --> 00:09:54,662
E então, se salvarmos isto,

212
00:09:54,662 --> 00:09:58,264
e então ir em frente e rodar isto no nosso

213
00:09:58,264 --> 00:10:00,110
Shell, vamos fornecer,

214
00:10:00,110 --> 00:10:01,474
ou vamos extrair

215
00:10:01,474 --> 00:10:02,784
o site inteiro agora.

216
00:10:02,784 --> 00:10:04,792
Então vamos em frente

217
00:10:04,792 --> 00:10:06,568
e vamos ver, há alguns erros,

218
00:10:06,568 --> 00:10:07,985
então course_name.

219
00:10:11,374 --> 00:10:13,750
Eu esqueci a vírgula.

220
00:10:13,750 --> 00:10:17,215
Então se formos em frente e pressionarmos Enter agora,

221
00:10:17,215 --> 00:10:19,140
isso deve ser tudo.

222
00:10:19,140 --> 00:10:22,278
Então nós extraimos, no nosso caso,

223
00:10:22,278 --> 00:10:25,828
vamos dizer 600 cursos diferentes.

224
00:10:26,365 --> 00:10:29,478
E vamos ver se recebemos algum erro.

225
00:10:29,478 --> 00:10:31,181
Parece que não temos nenhum erro,

226
00:10:31,181 --> 00:10:32,759
o que é perfeito.

227
00:10:32,759 --> 00:10:36,926
Então extraimos, basicamente, de cada um dos assuntos.

228
00:10:38,015 --> 00:10:41,832
Nós extraimos 50 cursos, o que totaliza

229
00:10:43,054 --> 00:10:46,085
12 vezes 50 é 600, o que é perfeito.

230
00:10:46,085 --> 00:10:50,171
Então já que o spider vai iterar sobre,

231
00:10:50,171 --> 00:10:52,079
por exemplo, neste caso,

232
00:10:52,079 --> 00:10:55,696
se Programming for selecionado,

233
00:10:55,696 --> 00:10:58,279
ele vai processar as próximas páginas,

234
00:10:59,197 --> 00:11:03,364
e ele vai pegar 488 cursos, não apenas os 50.

235
00:11:03,653 --> 00:11:07,403
Então se nós formos para Programming, por exemplo,

236
00:11:08,641 --> 00:11:10,761
você verá que há

237
00:11:10,761 --> 00:11:13,261
o botão "Load next 50 courses".

238
00:11:14,368 --> 00:11:16,809
Para ir para a próxima página,

239
00:11:16,809 --> 00:11:18,726
existem diversas maneiras

240
00:11:20,002 --> 00:11:21,275
quando falamos de extrair.

241
00:11:21,275 --> 00:11:22,303
Há múltiplas formas

242
00:11:22,303 --> 00:11:25,237
de fazer qualquer coisa, qualquer tarefa.

243
00:11:25,237 --> 00:11:28,289
E para conseguir a URL da próxima página

244
00:11:28,289 --> 00:11:30,201
podemos digitar "next"

245
00:11:30,201 --> 00:11:32,140
na nossa ferramenta Inspect.

246
00:11:32,140 --> 00:11:34,445
E a primeira coisa que aparecerá

247
00:11:34,445 --> 00:11:37,612
é o link, e então no valor do rel,

248
00:11:37,980 --> 00:11:41,935
o nó HTML rel, você verá que o valor next,

249
00:11:41,935 --> 00:11:44,852
que contém a segunda página.

250
00:11:45,763 --> 00:11:48,004
E quando ele for para a próxima página,

251
00:11:48,004 --> 00:11:49,696
ele irá conter a terceira página.

252
00:11:49,696 --> 00:11:51,500
Então iterar sobre páginas

253
00:11:51,500 --> 00:11:53,118
não poderia ser mais simples.

254
00:11:53,118 --> 00:11:55,285
Então para iterar sobre páginas,

255
00:11:56,374 --> 00:11:58,518
o jeito de fazer isso é

256
00:11:58,518 --> 00:12:00,734
apenas digitando

257
00:12:00,734 --> 00:12:04,901
"next_page = response.xpath"

258
00:12:05,626 --> 00:12:07,029
E vamos também

259
00:12:07,029 --> 00:12:11,029
em cada uma das funções rel,

260
00:12:12,152 --> 00:12:14,094
que tem o next.

261
00:12:14,094 --> 00:12:15,981
Então, neste caso, vai ser

262
00:12:15,981 --> 00:12:18,113
apenas uma instância.

263
00:12:18,113 --> 00:12:21,621
E nós vamos, uma vez que estamos neste nó HTML,

264
00:12:21,621 --> 00:12:23,873
vamos apenas pegar o próprio href.

265
00:12:23,873 --> 00:12:25,948
Então para fazer isso, claro, nós apenas

266
00:12:25,948 --> 00:12:28,398
colocamos o próprio href

267
00:12:28,398 --> 00:12:31,022
e chamamos o extract_first()

268
00:12:31,022 --> 00:12:34,022
E então, já que isso vai ser...

269
00:12:35,073 --> 00:12:36,661
vamos, na verdade, apenas copiar e colar isto

270
00:12:36,661 --> 00:12:38,804
no Shell e verificar

271
00:12:38,804 --> 00:12:39,981
se tudo está funcionando.

272
00:12:39,981 --> 00:12:42,633
Então se copiarmos isto, você verá que,

273
00:12:42,633 --> 00:12:45,951
novamente, response.urljoin deverá ser usado.

274
00:12:45,951 --> 00:12:49,154
Então digitamos

275
00:12:49,154 --> 00:12:52,319
absolute_next_page

276
00:12:52,319 --> 00:12:56,319
que vai ser igual ao response.urljoin.

277
00:12:57,155 --> 00:13:00,042
e então nos parênteses next_page,

278
00:13:00,042 --> 00:13:04,209
e então finalmente yield Request

279
00:13:04,879 --> 00:13:07,448
para o absolute_next_page.

280
00:13:07,448 --> 00:13:11,615
E o callback vai ser definido como

281
00:13:11,849 --> 00:13:15,993
self.parse_subject, claro.

282
00:13:15,993 --> 00:13:20,160
Se a iteração sobre as páginas for feito

283
00:13:20,691 --> 00:13:22,849
pela função parse,

284
00:13:22,849 --> 00:13:24,416
então o callback

285
00:13:24,416 --> 00:13:27,056
não vai ser necessário, por exemplo.

286
00:13:27,056 --> 00:13:29,179
Isso é uma coisa importante para notar.

287
00:13:29,179 --> 00:13:33,346
Mas, como não estamos na função padrão de chamada do Scrapy

288
00:13:34,270 --> 00:13:36,656
como o parse_subject,

289
00:13:36,656 --> 00:13:39,345
nós temos que atribuir o callback.

290
00:13:39,345 --> 00:13:41,362
Então isso é uma coisa para notar

291
00:13:41,362 --> 00:13:43,269
que é realmente importante.

292
00:13:43,269 --> 00:13:46,747
E se salvarmos o projeto agora, e voltarmos,

293
00:13:46,747 --> 00:13:49,897
e formos para o diretório raiz,

294
00:13:49,897 --> 00:13:51,612
e vamos ver,

295
00:13:51,612 --> 00:13:54,205
e apenas extrair o Programming.

296
00:13:54,205 --> 00:13:56,332
Ou o subject como Programming.

297
00:13:56,332 --> 00:13:59,224
Previamente, tínhamos apenas 50 resultados.

298
00:13:59,224 --> 00:14:00,558
Então da primeira página.

299
00:14:00,558 --> 00:14:02,599
E se nós formos agora.

300
00:14:02,599 --> 00:14:04,526
Vamos ver se salvamos ele.

301
00:14:04,526 --> 00:14:07,755
Parece que tudo vai funcionar corretamente.

302
00:14:07,755 --> 00:14:09,332
Então, como estava dizendo,

303
00:14:09,332 --> 00:14:10,653
se pressionarmos Enter,

304
00:14:10,653 --> 00:14:11,852
então nós vamos, basicamente,

305
00:14:11,852 --> 00:14:13,713
pegar todos os cursos

306
00:14:13,713 --> 00:14:15,624
do assunto Programming.

307
00:14:15,624 --> 00:14:19,624
Então vamos pressionar Enter e ver os resultados.

308
00:14:26,451 --> 00:14:30,618
E parece que o item_scraped_count é 486,

309
00:14:30,756 --> 00:14:31,758
o que é perfeito.

310
00:14:31,758 --> 00:14:33,893
Então basicamente todo curso

311
00:14:33,893 --> 00:14:37,135
do Programming vai ser extraído.

312
00:14:37,135 --> 00:14:40,860
Vamos verificar novamente indo

313
00:14:40,860 --> 00:14:44,813
e digitando algum outro assunto, ou cursos.

314
00:14:44,813 --> 00:14:46,980
Vamos para Science.

315
00:14:47,894 --> 00:14:51,227
Copie e cole isso no próprio subject

316
00:14:55,458 --> 00:14:59,458
e pressione Enter, então vamos ver se isso funciona.

317
00:15:10,050 --> 00:15:11,319
Ok, então parece que

318
00:15:11,319 --> 00:15:15,475
item_scraped_count é 717, o que é perfeito.

319
00:15:15,475 --> 00:15:16,727
Não há erros.

320
00:15:16,727 --> 00:15:18,527
E vamos, para o final,

321
00:15:18,527 --> 00:15:22,694
definir a saída como um arquivo CSV

322
00:15:22,704 --> 00:15:24,442
ou como items.csv.

323
00:15:24,442 --> 00:15:26,321
E vamos verificar que

324
00:15:26,321 --> 00:15:29,071
não recebemos nenhum erro quando vamos

325
00:15:29,989 --> 00:15:34,156
mandar esses dados para o arquivo CSV.

326
00:15:34,636 --> 00:15:37,136
Vamos ver se está finalizado.

327
00:15:39,532 --> 00:15:41,910
E vamos para nosso arquivo CSV,

328
00:15:41,910 --> 00:15:45,027
absolute_course_url, course_name,

329
00:15:45,027 --> 00:15:46,517
e subject_name, claro,

330
00:15:46,517 --> 00:15:48,367
sempre vai ser.

331
00:15:48,367 --> 00:15:51,079
"Computer Science" e, é...

332
00:15:51,079 --> 00:15:52,834
Isso deve ser tudo

333
00:15:52,834 --> 00:15:56,397
para este vídeo, ou para o

334
00:15:56,397 --> 00:15:59,228
minicurso para o spider Class Central,

335
00:15:59,228 --> 00:16:02,561
E vejo você no próximo vídeo.

