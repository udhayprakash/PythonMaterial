1
00:00:00,506 --> 00:00:02,867
Hey there! So in this video we will cover

2
00:00:02,867 --> 00:00:06,123
logging in to the site with Scrapy, and we will do this

3
00:00:06,123 --> 00:00:08,534
with the already existing code that we have

4
00:00:08,534 --> 00:00:10,276
from our previous video.

5
00:00:10,276 --> 00:00:14,221
So let's just double verify that everything is going

6
00:00:14,221 --> 00:00:17,439
to work correctly and without any errors.

7
00:00:17,439 --> 00:00:20,740
Everything is working fine, so pretty much this site

8
00:00:20,740 --> 00:00:23,140
from the home page has the Login button.

9
00:00:23,140 --> 00:00:26,765
After that, we will go to the /login page,

10
00:00:26,765 --> 00:00:30,058
and we can type in pretty much any username and password

11
00:00:30,058 --> 00:00:34,225
combo and type in Login, and we will get redirected

12
00:00:35,721 --> 00:00:39,888
to the home page and here we have the Logout button,

13
00:00:40,073 --> 00:00:42,241
so that pretty much means

14
00:00:42,241 --> 00:00:44,852
that we are logged in successfully.

15
00:00:44,852 --> 00:00:48,555
Obviously, this is just a demo site and on the real site

16
00:00:48,555 --> 00:00:52,234
after you login you would get some data points, URLs,

17
00:00:52,234 --> 00:00:56,401
or stuff like that which you don't normally have

18
00:00:56,948 --> 00:00:59,641
without logging in, so that's the entire point

19
00:00:59,641 --> 00:01:03,525
of actually using logging in.

20
00:01:04,203 --> 00:01:08,370
So let's get back to the Firefox, the good old Firefox,

21
00:01:08,468 --> 00:01:12,586
and let's go actually just first on the Login.

22
00:01:12,586 --> 00:01:15,336
And now we can go to the Firebug.

23
00:01:16,200 --> 00:01:19,621
We can go the Net Developer Tools.

24
00:01:19,621 --> 00:01:22,998
As you can see from the pop-up it allows us to analyze

25
00:01:22,998 --> 00:01:25,248
the network traffic or URLs

26
00:01:26,872 --> 00:01:30,431
that server is going to request.

27
00:01:31,021 --> 00:01:33,271
Now there are two requests,

28
00:01:34,159 --> 00:01:38,305
The first one or in this case there are two of them.

29
00:01:38,305 --> 00:01:40,486
The first one is going to be the POST,

30
00:01:40,486 --> 00:01:43,495
and the second one is going to be the GET.

31
00:01:43,495 --> 00:01:46,828
So let's just click the Login, and here,

32
00:01:49,049 --> 00:01:53,216
as you can see probably, by now we have the POST and GET.

33
00:01:53,607 --> 00:01:55,952
POST is going to be the most interesting one,

34
00:01:55,952 --> 00:01:58,255
and here we have the statuses.

35
00:01:58,255 --> 00:02:01,620
And this one is 302 which pretty much means

36
00:02:01,620 --> 00:02:05,695
that we are redirected and from logging in page,

37
00:02:06,968 --> 00:02:09,271
so this one we got redirected

38
00:02:09,271 --> 00:02:11,864
once we are logged in to the home page.

39
00:02:11,864 --> 00:02:16,031
So this pretty much means that the other URL is this one

40
00:02:16,926 --> 00:02:19,434
after the redirection, so to speak,

41
00:02:19,434 --> 00:02:22,115
we are going to get the home page.

42
00:02:22,115 --> 00:02:24,043
We don't care too much about this page.

43
00:02:24,043 --> 00:02:27,770
We just care about the POST request.

44
00:02:27,770 --> 00:02:30,980
Let's actually just maximize it a little bit.

45
00:02:30,980 --> 00:02:34,230
And after popping this up, we will see

46
00:02:35,554 --> 00:02:38,394
that there are more than a few Tabs.

47
00:02:38,394 --> 00:02:41,606
Mainly we are going to be interested in the Post one,

48
00:02:41,606 --> 00:02:43,378
so here we have the three arguments.

49
00:02:43,378 --> 00:02:46,745
The first one is the csrf_token.

50
00:02:46,745 --> 00:02:49,526
So this is going to be a dynamically changed token,

51
00:02:49,526 --> 00:02:53,228
and this is going to be definitely important for us

52
00:02:53,228 --> 00:02:56,571
because without it we are not going to successfully

53
00:02:56,571 --> 00:02:58,144
login to the site.

54
00:02:58,144 --> 00:03:01,765
And finally we can pretty much get this password

55
00:03:01,765 --> 00:03:05,828
and username combo is hard coded into our code.

56
00:03:05,828 --> 00:03:09,995
They don't really matter, they can be not changed

57
00:03:10,818 --> 00:03:14,068
and they are not dynamically assigned

58
00:03:14,068 --> 00:03:16,651
such as this string or a token.

59
00:03:17,932 --> 00:03:20,575
Let's go back to our code.

60
00:03:20,575 --> 00:03:22,958
So from our code what needs to be updated

61
00:03:22,958 --> 00:03:24,894
is first the imports.

62
00:03:24,894 --> 00:03:29,061
So the import that we are going to use is sub module

63
00:03:29,121 --> 00:03:31,450
in Scrapy called FormRequest.

64
00:03:31,450 --> 00:03:34,207
So we can import that by typing in

65
00:03:34,207 --> 00:03:38,349
from scrapy.http import FormRequest,

66
00:03:39,924 --> 00:03:44,091
let's see, and we will use it in a moment.

67
00:03:44,184 --> 00:03:47,195
So the starting URL will be not this one.

68
00:03:47,195 --> 00:03:50,191
We also don't need the allowed_domains.

69
00:03:50,191 --> 00:03:53,113
It's really going to make stuff complicated

70
00:03:53,113 --> 00:03:55,363
without any positive sides.

71
00:03:59,290 --> 00:04:01,721
The home page will not be the starting URL.

72
00:04:01,721 --> 00:04:05,763
It's going to be this one, so it's going to,

73
00:04:05,763 --> 00:04:07,680
let's actually go back.

74
00:04:08,928 --> 00:04:12,345
The starting URL is going to be this one.

75
00:04:14,371 --> 00:04:18,121
Let's see, so let's actually just rename this

76
00:04:19,374 --> 00:04:22,291
to something like scrape_home_page,

77
00:04:23,241 --> 00:04:26,741
and then the function, the default one,

78
00:04:26,741 --> 00:04:29,288
is going to be of course parse

79
00:04:29,288 --> 00:04:33,195
and it's just going to read from the all response

80
00:04:33,195 --> 00:04:37,125
of course is going to be read from this page.

81
00:04:37,125 --> 00:04:40,958
And finally, we are going to yield FormRequest

82
00:04:42,516 --> 00:04:46,683
or return it, but before that, we will need to scrape

83
00:04:50,990 --> 00:04:52,240
the csrf_token.

84
00:04:53,770 --> 00:04:57,937
This is located here in the Login page so let's Inspect it

85
00:04:58,252 --> 00:05:02,419
with Google, and here we have it in the &lt;input&gt; node.

86
00:05:02,767 --> 00:05:06,934
Because the page is just really a demo, we can pretty much

87
00:05:08,882 --> 00:05:13,049
identify exactly right away what exactly is the value

88
00:05:14,431 --> 00:05:16,695
that we are looking for and, in this case,

89
00:05:16,695 --> 00:05:18,649
it's going to be this string.

90
00:05:18,649 --> 00:05:21,200
If we reload this page, it's just going to be,

91
00:05:21,200 --> 00:05:24,486
as you will see in a moment, it's going to be completely

92
00:05:24,486 --> 00:05:26,586
something different, as you can see.

93
00:05:26,586 --> 00:05:29,288
So it's dynamically changed value

94
00:05:29,288 --> 00:05:31,655
because after all it's a token.

95
00:05:31,655 --> 00:05:35,563
So here we have in a &lt;input&gt; really HTML node.

96
00:05:36,945 --> 00:05:40,721
We have the value but we will grab it

97
00:05:40,721 --> 00:05:44,049
with the name and then in the name we are going

98
00:05:44,049 --> 00:05:47,709
to look for this exact string, and then from then on

99
00:05:47,709 --> 00:05:49,435
we can extract the value.

100
00:05:49,435 --> 00:05:53,466
So to not waste any more time, let's actually go to

101
00:05:53,466 --> 00:05:55,775
scrapy shell and let's test out

102
00:05:55,775 --> 00:05:59,068
if we can scrape data from there.

103
00:05:59,068 --> 00:06:02,735
So response.xpath and let's see we are going

104
00:06:04,055 --> 00:06:08,222
to get or grab the name once again which is from the input.

105
00:06:09,742 --> 00:06:13,358
But we don't care so we are going to scrape the name

106
00:06:13,358 --> 00:06:17,192
with the value of csrf_token,

107
00:06:17,504 --> 00:06:19,441
and here we found Selector.

108
00:06:19,441 --> 00:06:22,858
So let's actually just get the HTML node

109
00:06:24,491 --> 00:06:26,661
so it's in the form of a list.

110
00:06:26,661 --> 00:06:30,078
So that's fine, and here we get the &lt;input&gt;

111
00:06:31,341 --> 00:06:35,508
HTML part and the value which is the thing that we need.

112
00:06:36,440 --> 00:06:39,404
So pretty much we need this type of data,

113
00:06:39,404 --> 00:06:42,987
and to extract the value, we are just going

114
00:06:43,897 --> 00:06:48,056
to type in /@value.

115
00:06:49,818 --> 00:06:53,757
And this is in the form of a list so to get the unicode

116
00:06:53,757 --> 00:06:57,715
we are going to just type in extract_first().

117
00:06:57,715 --> 00:07:01,355
So let's copy it, let's go back to our code,

118
00:07:01,355 --> 00:07:05,510
and let's call this variable name token.

119
00:07:05,510 --> 00:07:09,107
Let's prettify this a little bit so it's a bit more readable

120
00:07:09,107 --> 00:07:13,274
and finally I think we can pretty much return FormRequest.

121
00:07:16,001 --> 00:07:19,256
Now this will read from the Login page so we will use

122
00:07:19,256 --> 00:07:22,188
from_response, so to do that

123
00:07:22,188 --> 00:07:26,346
we will use syntax this.

124
00:07:27,538 --> 00:07:30,756
And let's see, so the first parameter here

125
00:07:30,756 --> 00:07:32,482
is going to be the URL.

126
00:07:32,482 --> 00:07:36,227
We can just read from the response and then we are

127
00:07:36,227 --> 00:07:38,602
going to form data,

128
00:07:40,301 --> 00:07:41,507
let's see, formdata.

129
00:07:41,507 --> 00:07:44,677
So formdata is just going to be a dictionary,

130
00:07:44,677 --> 00:07:46,812
and in that dictionary is just going

131
00:07:46,812 --> 00:07:49,404
to be three dictionary items.

132
00:07:49,404 --> 00:07:51,504
The first one is going to be this pretty much,

133
00:07:51,504 --> 00:07:55,671
and the last two are going to be password and username.

134
00:07:56,073 --> 00:07:59,275
Let's define first the dictionary keys.

135
00:07:59,275 --> 00:08:02,692
So the first one is going to be this one,

136
00:08:04,637 --> 00:08:07,310
so formdata is going to be this one.

137
00:08:07,310 --> 00:08:10,186
And this one or the first one is obviously going to read

138
00:08:10,186 --> 00:08:13,183
from the token, so it's going to be

139
00:08:13,183 --> 00:08:15,733
once again dynamically changed.

140
00:08:15,733 --> 00:08:18,385
The second one it's going to be password.

141
00:08:18,385 --> 00:08:22,552
It doesn't matter if you put password first then,

142
00:08:22,828 --> 00:08:25,490
for example, csrf or really token.

143
00:08:25,490 --> 00:08:29,657
The last it's not ordered and the last one is the username.

144
00:08:30,508 --> 00:08:34,675
We can hard code it and just put really anything here.

145
00:08:35,485 --> 00:08:39,318
It doesn't matter as you will see in a moment.

146
00:08:40,339 --> 00:08:44,272
And let's see, and we need to get callback.

147
00:08:46,435 --> 00:08:49,650
So to do that or call the callback function,

148
00:08:49,650 --> 00:08:52,766
so to do that type in callback is going to equal

149
00:08:52,766 --> 00:08:56,025
to the self.scrape_home_page.

150
00:08:56,383 --> 00:09:00,430
So it's going to go to this page and then scrape data.

151
00:09:01,280 --> 00:09:03,625
Let's see if I'm missing something.

152
00:09:03,625 --> 00:09:06,958
I don't think I am, but let's verify it.

153
00:09:08,073 --> 00:09:12,240
It seems like everything is in the right order,

154
00:09:12,380 --> 00:09:16,547
so let's go back to our Spider code and let's run it.

155
00:09:20,610 --> 00:09:22,095
And it seems like it's working.

156
00:09:22,095 --> 00:09:25,804
So to make sure that this is actually working,

157
00:09:25,804 --> 00:09:29,222
what we need to do is call another import.

158
00:09:29,222 --> 00:09:33,389
And this import is also some module in Scrapy module,

159
00:09:34,485 --> 00:09:38,592
and it's called open_in_browser, so let's import it.

160
00:09:38,592 --> 00:09:42,717
So from scrapy.utils.response import

161
00:09:46,093 --> 00:09:50,234
open_in_browser.

162
00:09:51,471 --> 00:09:54,019
And then we can just go into the function

163
00:09:54,019 --> 00:09:56,035
called scape_home_page and just

164
00:09:56,035 --> 00:09:58,577
open_in_browser(response).

165
00:09:58,577 --> 00:10:02,535
Click Save and this is mostly used when debugging.

166
00:10:02,535 --> 00:10:06,594
So if you don't know what type of page

167
00:10:07,754 --> 00:10:10,924
is getting loaded, you can then just open

168
00:10:10,924 --> 00:10:12,817
in Browser from the function.

169
00:10:12,817 --> 00:10:16,954
For example, come and see what exactly or what data points

170
00:10:16,954 --> 00:10:20,908
are available because sometimes as more and more sites

171
00:10:20,908 --> 00:10:25,075
are JavaScript heavy, sometimes data points are read

172
00:10:26,451 --> 00:10:30,618
from some URL or something like that from the server side.

173
00:10:30,936 --> 00:10:33,815
Let's see, let's actually run it and this will actually

174
00:10:33,815 --> 00:10:37,982
open the, hopefully, tmp file, as you will see in a moment.

175
00:10:38,587 --> 00:10:40,087
So this is the URL

176
00:10:42,720 --> 00:10:45,351
or read from the response, right,

177
00:10:45,351 --> 00:10:46,543
so let's actually just run it

178
00:10:46,543 --> 00:10:48,337
and you will see in a moment, perfect.

179
00:10:48,337 --> 00:10:52,504
So it's opened and here from the home page we get the Logout

180
00:10:53,731 --> 00:10:56,738
button which pretty much means that we are logged in.

181
00:10:56,738 --> 00:11:00,905
So if we go to the home page, as you can see,

182
00:11:01,084 --> 00:11:03,673
this the, once again from the Internet,

183
00:11:03,673 --> 00:11:07,127
so we are not logged in here and from the tmp

184
00:11:07,127 --> 00:11:10,785
or temporary file, we are logged in.

185
00:11:11,330 --> 00:11:14,290
So that pretty much means that we are good to go

186
00:11:14,290 --> 00:11:17,672
and that our logging in worked perfectly well.

187
00:11:17,672 --> 00:11:20,146
Again, this is just for demo purposes.

188
00:11:20,146 --> 00:11:23,962
You would log into real sites with pretty much similar

189
00:11:23,962 --> 00:11:26,429
or exactly like this.

190
00:11:26,429 --> 00:11:30,596
Most of the time the site will have some kind of token

191
00:11:31,448 --> 00:11:33,588
and that password and username, of course,

192
00:11:33,588 --> 00:11:37,755
you will define it as you register and that would

193
00:11:37,810 --> 00:11:40,283
pretty much be it for this video.

194
00:11:40,283 --> 00:11:43,740
In the very next one we will talk more about how you can

195
00:11:43,740 --> 00:11:47,907
run Scrapy spider without needing to define the entire

196
00:11:48,165 --> 00:11:52,332
project tree as we did here, so you can bottom line run it

197
00:11:52,560 --> 00:11:55,393
with python foo.py.

198
00:11:56,465 --> 00:11:59,269
So see you in the very next video!

